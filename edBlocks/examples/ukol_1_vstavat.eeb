<xml xmlns="http://www.w3.org/1999/xhtml">
  <block type="new_event_start" id="vPEah;f,5Vq@@LR1BgJI" deletable="false" movable="false" x="18" y="148">
    <next>
      <block type="control_wait_event" id=":Tb(my9OgXr8PY8hm(nI">
        <value name="CHOICE">
          <shadow type="dropdown_control_setwait_event" id="*V@Hp3XHkL!+!49c)G9U">
            <field name="CHOICE">right</field>
          </shadow>
        </value>
        <next>
          <block type="light_sound_beep" id="hLy2/|mcC{k|!F4j_/S/">
            <next>
              <block type="light_sound_LED" id="lsLOXvqh]o/LYhNCf,gl">
                <value name="CHOICE">
                  <shadow type="dropdown_light_sound_LED" id="{d(!c__vxDelLQq]g[xu">
                    <field name="CHOICE">rightOn</field>
                  </shadow>
                </value>
                <next>
                  <block type="control_wait_time" id="4Y7h%cz@Up=vFn3o#N9,">
                    <value name="DURATION">
                      <shadow type="math_positive_number" id="NfKymWiZj,:eeu91PgtL">
                        <field name="NUM">2</field>
                      </shadow>
                    </value>
                    <next>
                      <block type="light_sound_LED" id="jW7[b4%`fmJ]7@zjmG2n">
                        <value name="CHOICE">
                          <shadow type="dropdown_light_sound_LED" id="3P9:kYdUH4/cq|ab5t0x">
                            <field name="CHOICE">leftOn</field>
                          </shadow>
                        </value>
                        <next>
                          <block type="control_loop_number" id="l0xR5^Phmb^nivX*ZW#w">
                            <statement name="SUBSTACK">
                              <block type="drive_left_time" id="yP89JI0+^rbovHxN3r;5">
                                <value name="DURATION">
                                  <shadow type="math_positive_number" id="dQcF^F1^X~p),qsU4j;o">
                                    <field name="NUM">0.1</field>
                                  </shadow>
                                </value>
                                <next>
                                  <block type="drive_right_time" id="yGOl7G7HjU5hjMrcveaw">
                                    <value name="DURATION">
                                      <shadow type="math_positive_number" id="gey+MD|#-*h}FVP?yR,%">
                                        <field name="NUM">0.1</field>
                                      </shadow>
                                    </value>
                                  </block>
                                </next>
                              </block>
                            </statement>
                            <value name="TIMES">
                              <shadow type="math_whole_number" id="fxxk-]QE10Xc#5]qGkx-">
                                <field name="NUM">2</field>
                              </shadow>
                            </value>
                            <next>
                              <block type="light_sound_LED" id="=ZP8lakGsx}{m=kw[7BW">
                                <value name="CHOICE">
                                  <shadow type="dropdown_light_sound_LED" id="/VBB9Pelofvd:M|cc#C|">
                                    <field name="CHOICE">bothOff</field>
                                  </shadow>
                                </value>
                                <next>
                                  <block type="control_wait_event" id="B{C.?HwpT^n7Q_n/mTNm">
                                    <value name="CHOICE">
                                      <shadow type="dropdown_control_setwait_event" id="1Vg:sL_EPgC0Oa8_FWD[">
                                        <field name="CHOICE">circle</field>
                                      </shadow>
                                    </value>
                                  </block>
                                </next>
                              </block>
                            </next>
                          </block>
                        </next>
                      </block>
                    </next>
                  </block>
                </next>
              </block>
            </next>
          </block>
        </next>
      </block>
    </next>
  </block>
</xml>